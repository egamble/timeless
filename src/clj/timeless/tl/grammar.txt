<S> = operation-1


<exp> = group | application | section | set | seq | tuple | str | name | number


group = left-paren gte-0 right-paren
application = exp exp+
<section> = left-section | right-section | prefix-op
prefix-op = left-paren op right-paren



embedded = op-10 gt-10



(*
Sets can't have empty elements.
*)

<set-element-segment> = (guard-op gt-1) | (arrow-op (embedded | gt-1))

<abbreviated-set-element> = set-element-segment+
<unabbreviated-set-element> = (embedded | gt-1) set-element-segment*

set-element = abbreviated-set-element | unabbreviated-set-element
set = (set-left set-right) | (set-left (set-element comma)* set-element set-right)



(*
Seqs and tuple can have empty elements, as sections.

There is no way to make a seq or tuple section with a single empty (epsilon) element.
*)

<element-not-empty> = embedded | gte-0
<element> = element-not-empty | empty-element
empty-element = epsilon

seq = (seq-left element-not-empty? seq-right) | (seq-left (element comma)+ element seq-right)
tuple = left-paren (element comma)+ element right-paren



(*
string literal
*)
str = ws #'\".*\"' ws


(*
regular name
*)
name = ws #'[a-zA-Z_]\w*' ws


(*
number literal
*)
number = ws #'\d+(?:\.\d+)?' ws



<comma> = ws <','> ws

<ws> = (ws-only | comment)*
<ws-only> = <#'\s+'>
<comment> = <#'#.*\n'>



<set-left> = ws <'{'> ws
<set-right> = ws <'}'> ws

<seq-left> = ws <'['> ws
<seq-right> = ws <']'> ws

<left-paren> = ws <'('> ws
<right-paren> = ws <')'> ws



(* The arrow operation is right associative. *)
<left-0> = left-paren (embedded | gt-0) op-0 right-paren
<right-0> = left-paren op-0 (embedded | gte-0) right-paren
operation-0 = (embedded | gt-0) op-0 (embedded | gte-0)

<op-0> = arrow-op

arrow-op = ws <'->' | 'â†’'> ws

<gte-0> = exp | _gte-0
<gt-0> = exp | _gt-0
<_gte-0> = operation-0 | _gt-0
<_gt-0> = _gte-1



(* The guard operation is left associative. *)
<left-1> = left-paren (embedded | gte-1) op-1 right-paren
<right-1> = left-paren op-1 gt-1 right-paren
operation-1 = (embedded | gte-1) op-1 gt-1

<op-1> = guard-op

guard-op = ws <'|'> ws

<gte-1> = exp | _gte-1
<gt-1> = exp | _gt-1
<_gte-1> = operation-1 | _gt-1
<_gt-1> = _gte-10
