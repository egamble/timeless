;; Library functions

(= ∘ (:fn f (:fn g (:fn x (f (g x))))))

(= inc (:fn x (+ x 1)))
(= dec (:fn x (- x 1)))

;; TODO: change the name to (:name "..")
(= range
 (∪ (:fn (∈ a Int)
         (∪ (:fn a (:seq a))
            (:fn (∈ b Int)
                 (:cons a (range (inc a) b))
                 (< a b))))
    (:fn (∈ c Char)
         (∪ (:fn c (:seq c))
            (:fn (∈ d Char)
                 (:cons c (range (intChar (inc a)) d))
                 (= a (charInt c)) (= b (charInt d)) (< a b))))))

(= map
   (:fn f
        (∪ (:fn (:seq) (:seq))
           (:fn (:cons x xs) (:cons (f x) (map f xs))))))

(= filter
   (:fn S
        (∪ (:fn (:seq) (:seq))
           (:fn (:cons x xs)
                ((∪ (:fn _ (:cons x r) (∈ x S))
                    (:fn _ r))
                 :emptyfn)
                (= r (filter S xs))))))

(= remove
   (:fn S
        (∪ (:fn (:seq) (:seq))
           (:fn (:cons x xs)
                ((∪ (:fn _ r (∈ x S))
                    (:fn _ (:cons x r)))
                 :emptyfn)
                (= r (remove S xs))))))

(= identity
   (:fn x x))

;; TODO: make sure <then> and <else> are lazily evaluated.
(= if
   (:fn cond
        (:fn then
             (:fn else
                  ((∪ (:fn _ then cond)
                      (:fn _ else))
                   :emptyfn)))))
